%code to sort timeseries data by yeo parcellation and create correlation matrix then create a group averaged correlation matrix with labels

%% load Yeo networks parcellation to have a sorted vertex x membership "key"
[vertices label ctab]=read_annotation('/Users/sara/Desktop/Yeo_fsaverage6/label/rh.Yeo2011_7Networks_N1000.annot');
NodeNetworkMembership = changem(label,0,65793);
NodeNetworkMembership = changem(NodeNetworkMembership,1,8786552);
NodeNetworkMembership = changem(NodeNetworkMembership,2,11829830);
NodeNetworkMembership = changem(NodeNetworkMembership,3,947712);
NodeNetworkMembership = changem(NodeNetworkMembership,4,16399044);
NodeNetworkMembership = changem(NodeNetworkMembership,5,10811612);
NodeNetworkMembership = changem(NodeNetworkMembership,6,2266342);
NodeNetworkMembershipRH = changem(NodeNetworkMembership,7,5127885);

[rh_sorted, rh_order] = sort(NodeNetworkMembershipRH);

[vertices label ctab]=read_annotation('/Users/sara/Desktop/Yeo_fsaverage6/label/lh.Yeo2011_7Networks_N1000.annot');
NodeNetworkMembership = changem(label,0,65793);
NodeNetworkMembership = changem(NodeNetworkMembership,1,8786552);
NodeNetworkMembership = changem(NodeNetworkMembership,2,11829830);
NodeNetworkMembership = changem(NodeNetworkMembership,3,947712);
NodeNetworkMembership = changem(NodeNetworkMembership,4,16399044);
NodeNetworkMembership = changem(NodeNetworkMembership,5,10811612);
NodeNetworkMembership = changem(NodeNetworkMembership,6,2266342);
NodeNetworkMembershipLH = changem(NodeNetworkMembership,7,5127885);

[lh_sorted, lh_order] = sort(NodeNetworkMembershipLH);

subs = dir('/Users/sara/Desktop/02_Data/P*');
%% Make sorted individual matrices
for ii= 1:length(subs)
    sub=subs(ii).name
    timepoint=strlength(sub)
    %% run timepoint 1 and timepoint 2 separately
    if 
        timepoint==4 %timepoint 1
        cd /Users/sara/Desktop/02_Data/
        cd (sub)
               for scan = 1:3
              %load mgh surface overlap files
              rh=['BOLDsurfrh', num2str(scan), '.mgh'];
              R=load_mgh(rh);
              lh=['BOLDsurfrh', num2str(scan), '.mgh'];
              L=load_mgh(lh);
              
              %pull out timeseries data from 4d array mgh
              timeseriesL =squeeze(L);
              timeseriesR=squeeze(R);
            
                    if scan==1
                    alltimeseriesL=(timeseriesL);
                    alltimeseriesR=(timeseriesR);
                    else
                    %concatenate 3 scans
                    alltimeseriesL=cat(2, alltimeseriesL, timeseriesL);
                    alltimeseriesR=cat(2, alltimeseriesR, timeseriesR);
                    end
                end
    %sort the matrix by node network membership
    sortedlhtp = alltimeseriesL(lh_order,:);
    sortedrhtp = alltimeseriesR(rh_order,:);
    %% remove medial wall nodes
    %delete the rows of the unwanted networks (0s)
    Del0=rh_sorted(:,1)==0;
    sortedrhtp(Del0,:)=[];
    Del0=lh_sorted(:,1)==0;
    sortedlhtp(Del0,:)=[];
    % %save timepoints
    % save(['/data/project/vislab/a/MBAR/MBAR_systemsegregation/MBARnodes_Correlationmatrices/' sub '/' sub 'sortedtimepointswnetworks.mat'], 'individualnodessorted');
    % %remove network number ids from first column
    % individualnodessorted(:,1)=[];
    %% run correlation on sorted matrix
    tp = [sortedlhtp;sortedrhtp]; % Combine left and right
    r = corrcoef(tp'); % Correlation matrix
    z = 0.5 * log((1+r)./(1-r)); % Fisher-z transform
    %save the z-matrix
    save(['/data/project/vislab/a/MBAR/MBAR_systemsegregation/MBARnodes_Correlationmatrices/' sub '/' sub 'funccorrsorted.mat'], 'z');
    %remove negative z values and save
    individualcorrpossort = max(0, z);
    save(['/data/project/vislab/a/MBAR/MBAR_systemsegregation/MBARnodes_Correlationmatrices/' sub '/' sub 'funccorrpossorted.mat'], 'individualcorrpossort');
    %else
    %end
   
end
%% make a group average matrix of sorted correlation values
for ii=1:length(subs)
    sub = subs(ii).name
load(['/data/project/vislab/a/MBAR/MBAR_systemsegregation/MBARnodes_Correlationmatrices/' sub '/' sub 'funccorrpossorted.mat'])
if ii==1
    meancorr = individualcorrpossort;
else
    meancorr = meancorr + individualcorrpossort;
end
else %timepoint 2
         disp('Ikke gyldig navn');
    end
end
meancorr = meancorr/ii;
save('/data/project/vislab/a/MBAR/MBAR_systemsegregation/MBARnodes_Correlationmatrices/meanfunccorrpos.mat');
imagesc(meancorr)
